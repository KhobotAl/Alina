#include <iostream>
#include <cmath> // Для sqrt()

using namespace std;

//Proc20.
//Описати функцію TriangleP (a, h), що знаходить периметр рівнобедреноготрикутника по його основи a і висоті h, проведеної до основи (a і h -дійсні). 
//За допомогою цієї функції знайти периметри трьох трикутників,для яких дані підстави і висоти. 
//Для знаходження збоку b трикутника використовувати теорему Піфагора: b2 = (a / 2) 2 + h2.

// Функція для обчислення та виведення периметра рівнобедреного трикутника
void TriangleP_Equilateral(double a, double h) {
    // Знаходимо бокову сторону за теоремою Піфагора
    double b = sqrt((a / 2) * (a / 2) + h * h);
    
    // Периметр рівнобедреного трикутника
    double perimeter = a + 2 * b;
    
    // Виведення периметра
    cout << "Периметр рівнобедреного трикутника: " << perimeter << endl;
}

// Функція для обчислення та виведення периметра прямокутного трикутника
void TriangleP_Right(double a, double h) {
    // Знаходимо гіпотенузу за теоремою Піфагора
    double b = sqrt((a / 2) * (a / 2) + h * h);
    
    // Периметр прямокутного трикутника
    double perimeter = (a / 2) + h + b;
    
    // Виведення периметра
    cout << "Периметр прямокутного трикутника: " << perimeter << endl;
}

//Boolean27.
//Дано числа x, y. 
//Перевірити істинність висловлювання: «Точка з координатами (x, y) лежить в другій або третій координатній чверті».

// Функція для перевірки, чи точка лежить в другій або третій чверті
void checkQuarter(float x, float y) {
    // Перевірка, чи точка лежить в другій або третій чверті
    if (x < 0 && (y > 0 || y < 0)) {
        cout << "Точка (" << x << ", " << y << ") лежить в другій або третій координатній чверті." << endl;
    } else {
        cout << "Точка (" << x << ", " << y << ") не лежить в другій або третій координатній чверті." << endl;
    }
}

//Integer23.
//З початку доби минуло N секунд (N - ціле). 
//Знайти кількість повних хвилин, що минули з початку останньої години.

// Функція для знаходження кількості повних хвилин, що минули з початку останньої години
void findFullMinutesInLastHour(int N) {
    // Перевірка на коректність введених секунд
    if (N < 0) {
        cout << "Некоректне значення! Кількість секунд не може бути від'ємною." << endl;
        return;  // Якщо значення секунд від'ємне, припиняємо виконання
    }

    // Кількість секунд в останній годині (3600 секунд = 1 година)
    int secondsInLastHour = N % 3600;
    
    // Кількість повних хвилин
    int fullMinutes = secondsInLastHour / 60;
    
    // Виведення результату
    cout << "Кількість повних хвилин, що минули з початку останньої години: " << fullMinutes << endl;
}

// Функція для перевірки на коректність введених значень
bool inputValidation(double &a, double &h) {
    cout << "Введіть основу трикутників (a): ";
    cin >> a;
    cout << "Введіть висоту трикутників (h): ";
    cin >> h;
    
    // Перевірка на коректність введених значень
    if (cin.fail() || a <= 0 || h <= 0) {
        cout << "Некоректні дані! Значення повинні бути більшими за 0." << endl;
        return false;  // Повертаємо false, якщо введення некоректне
    }
    return true;  // Повертаємо true, якщо введення коректне
}

// Меню для вибору завдання
void menu() {
    int choice;
    cout << "Оберіть завдання:" << endl;
    cout << "1. Обчислення периметрів рівнобедреного та прямокутних трикутників" << endl;
    cout << "2. Перевірка, чи точка лежить в другій або третій чверті" << endl;
    cout << "3. Знайти кількість повних хвилин, що минули з початку останньої години" << endl;
    cout << "Ваш вибір: ";
    cin >> choice;

    if (choice == 1) {
        double a, h;
        
        // Перевірка коректності введених даних
        if (!inputValidation(a, h)) {
            return;  // Якщо введення некоректне, програма завершується
        }

        // Обчислюємо та виводимо периметри для рівнобедреного трикутника
        TriangleP_Equilateral(a, h);
        
        // Обчислюємо та виводимо периметри для двох прямокутних трикутників
        TriangleP_Right(a, h);
        TriangleP_Right(a, h);
    } 
    else if (choice == 2) {
        float x, y;
        cout << "Введіть координати точки (x, y): ";
        cin >> x >> y;
        
        // Викликаємо функцію для перевірки
        checkQuarter(x, y);
    } 
    else if (choice == 3) {
        int N;
        cout << "Введіть кількість секунд, що минули з початку доби: ";
        cin >> N;
        
        // Перевірка на коректність кількості секунд
        findFullMinutesInLastHour(N);
    } 
    else {
        cout << "Невірний вибір, спробуйте ще раз." << endl;
    }
}

int main() {
    // Викликаємо меню
    menu();
    return 0;
}
