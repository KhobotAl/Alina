#include <iostream>
#include <vector>

using namespace std;

// Функція для введення елементів масиву
void input_array(vector<float>& mas) {
    // Запитуємо користувача ввести елементи масиву
    cout << "Введіть елементи масиву:" << endl;
    // Заповнюємо масив за допомогою циклу
    for (int i = 0; i < mas.size(); ++i) {
        cin >> mas[i];
    }
}

// Функція для виведення елементів масиву
void print_array(const vector<float>& mas) {
    // Проходимо по кожному елементу масиву і виводимо його
    for (float val : mas) {
        cout << val << " ";
    }
    cout << endl;  // Перехід на новий рядок після виведення всіх елементів
}

// Завдання 1
//Array11. 
//Дано масив A розміру N і ціле число K (1 ≤ K ≤ N). 
//Вивести елементи масиву з порядковими номерами, кратними K: AK, A2 · K, A3 · K, .... 
//Умовний оператор не використовувати.

void task1() {
    int n, K;
    // Запитуємо кількість елементів масиву
    cout << "Кількість елементів масиву: ";
    cin >> n;

    // Створюємо масив відповідного розміру
    vector<float> arr(n);
    input_array(arr);  // Заповнюємо масив

    // Виводимо елементи масиву для перевірки
    cout << "Елементи масиву:" << endl;
    print_array(arr);

    // Запитуємо значення K (індекс елемента для множення)
    cout << "K (1 <= K <= " << n << "): ";
    cin >> K;

    // Перевірка на коректність введеного K
    if (K < 1 || K > n) {
        cout << "Невірне значення для K! Воно повинно бути між 1 і " << n << "." << endl;
        return;  // Якщо K некоректне, виходимо з функції
    }

    // Значення елемента A[K] (індекс з 1, тому зменшуємо на 1)
    float multiply_value = arr[K - 1];

    // Перемножуємо кожен елемент масиву на значення A[K]
    for (float& element : arr) {
        element *= multiply_value;
    }

    // Виводимо перетворений масив
    cout << "Трансформований масив:" << endl;
    print_array(arr);
}

// Завдання 2
//Array65. 
//Дано масив A розміру N і ціле число K (1 ≤ K ≤ N). 
//Перетворити масив, збільшивши кожен його елемент на початкове значення елемента AK.

void task2() {
    int n, K;
    // Запитуємо кількість елементів масиву
    cout << "Кількість елементів масиву: ";
    cin >> n;

    // Створюємо масив відповідного розміру
    vector<float> arr(n);
    input_array(arr);  // Заповнюємо масив

    // Виводимо елементи масиву для перевірки
    cout << "Елементи масиву:" << endl;
    print_array(arr);

    // Запитуємо значення K (індекс елемента для збільшення)
    cout << "K (1 <= K <= " << n << "): ";
    cin >> K;

    // Перевірка на коректність введеного K
    if (K < 1 || K > n) {
        cout << "Невірне значення для K! Воно повинно бути між 1 і " << n << "." << endl;
        return;  // Якщо K некоректне, виходимо з функції
    }

    // Значення елемента A[K-1] (індекс з 1, тому зменшуємо на 1)
    float increment_value = arr[K - 1];

    // Збільшуємо кожен елемент масиву на значення A[K-1]
    for (float& element : arr) {
        element += increment_value;
    }

    // Виводимо перетворений масив
    cout << "Трансформований масив:" << endl;
    print_array(arr);
}

// Функція для вибору і виконання одного з завдань
void menu() {
    int choice;
    do {
        // Виводимо меню з опціями
        cout << "Оберіть опцію:\n";
        cout << "1. Завдання 1 (Трансформувати масив, перемноживши A[K] до кожного елемента)\n";
        cout << "2. Завдання 2 (Трансформувати масив, збільшивши кожен елемент на A[K-1])\n";
        cout << "3. Вихід\n";
        cout << "Введіть ваш вибір: ";
        cin >> choice;  // Користувач вибирає опцію

        // Виконуємо обрану операцію
        switch (choice) {
            case 1:
                task1();  // Викликаємо функцію для завдання 1
                break;
            case 2:
                task2();  // Викликаємо функцію для завдання 2
                break;
            case 3:
                cout << "Вихід з програми." << endl;  // Завершуємо програму
                break;
            default:
                // Якщо вибір некоректний, просимо вибрати знову
                cout << "Невірний вибір. Спробуйте ще раз." << endl;
        }
    } while (choice != 3);  // Цикл працює до вибору 3 (вихід)
}

int main() {
    menu();  // Викликаємо меню для запуску програми
    return 0;
}
